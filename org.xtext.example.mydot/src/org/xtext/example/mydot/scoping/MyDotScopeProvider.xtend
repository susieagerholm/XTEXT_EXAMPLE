/*
 * generated by Xtext 2.10.0
 */
package org.xtext.example.mydot.scoping

import org.eclipse.emf.ecore.EReference
import org.eclipse.xtext.scoping.IScope
import org.eclipse.xtext.scoping.Scopes
import org.xtext.example.mydot.myDot.DotExpression
import org.xtext.example.mydot.myDot.Reference
import org.xtext.example.mydot.myDot.Attribute
import org.xtext.example.mydot.myDot.EntityRef
import org.eclipse.emf.ecore.EObject
import org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider
import org.xtext.example.mydot.myDot.MyDotPackage

/**
 * This class contains custom scoping description.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 */
//class MyDotScopeProvider extends AbstractMyDotScopeProvider {
class MyDotScopeProvider extends AbstractDeclarativeScopeProvider {	
	//NEW 2.9 CUSTOM SCOPE
	override getScope(EObject ctx, EReference ref) {
   		if (ref == MyDotPackage.Literals.FEATURE) {
      		return createScopeForFeature()
   		} else if (ref == MyDotPackage.Literals.ENTITY) {
      		return createScopeForEntity()
   	}
}
	
	def IScope createScopeForFeature() {
		throw new UnsupportedOperationException("TODO: auto-generated method stub")
	}
	
	def IScope createScopeForEntity() {
		throw new UnsupportedOperationException("TODO: auto-generated method stub")
		//Scopes::scopeFor(head.entity.features)
		
	}
	
	//OLD PRE 2.9 METHOD FOR CUSTOM SCOPE
	/*def IScope scope_DotExpression_tail(DotExpression exp, EReference ref) {
	//override IScope getScope(EObject exp, EReference ref) {
		//super.getScope(exp, ref)
        val head = exp.ref;
        switch (head) {
            EntityRef : Scopes::scopeFor(head.entity.features)
            DotExpression : {
                val tail = head.tail
                switch (tail) {
                    Attribute : IScope::NULLSCOPE
                    Reference : Scopes::scopeFor(tail.type.features)
                    default: IScope::NULLSCOPE
                }
            }
             
            default: IScope::NULLSCOPE
        }
    }*/

}
