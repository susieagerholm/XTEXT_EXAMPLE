/**
 * generated by Xtext 2.10.0
 */
package org.xtext.example.mydsl.myDsl;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Link</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.Link#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.Link#getIsReuseOf <em>Is Reuse Of</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.Link#getDecorator <em>Decorator</em>}</li>
 * </ul>
 *
 * @see org.xtext.example.mydsl.myDsl.MyDslPackage#getLink()
 * @model
 * @generated
 */
public interface Link extends EObject
{
  /**
   * Returns the value of the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Name</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Name</em>' attribute.
   * @see #setName(String)
   * @see org.xtext.example.mydsl.myDsl.MyDslPackage#getLink_Name()
   * @model
   * @generated
   */
  String getName();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.myDsl.Link#getName <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Name</em>' attribute.
   * @see #getName()
   * @generated
   */
  void setName(String value);

  /**
   * Returns the value of the '<em><b>Is Reuse Of</b></em>' reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Is Reuse Of</em>' reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Is Reuse Of</em>' reference.
   * @see #setIsReuseOf(Link)
   * @see org.xtext.example.mydsl.myDsl.MyDslPackage#getLink_IsReuseOf()
   * @model
   * @generated
   */
  Link getIsReuseOf();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.myDsl.Link#getIsReuseOf <em>Is Reuse Of</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Is Reuse Of</em>' reference.
   * @see #getIsReuseOf()
   * @generated
   */
  void setIsReuseOf(Link value);

  /**
   * Returns the value of the '<em><b>Decorator</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Decorator</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Decorator</em>' containment reference.
   * @see #setDecorator(LinkDecorator)
   * @see org.xtext.example.mydsl.myDsl.MyDslPackage#getLink_Decorator()
   * @model containment="true"
   * @generated
   */
  LinkDecorator getDecorator();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.myDsl.Link#getDecorator <em>Decorator</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Decorator</em>' containment reference.
   * @see #getDecorator()
   * @generated
   */
  void setDecorator(LinkDecorator value);

} // Link
